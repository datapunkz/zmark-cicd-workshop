version: 2.1
orbs:
  node: circleci/node@5.2.0
  docker: circleci/docker@2.2.0
  snyk: snyk/snyk@1.4.0
  artifactory: jfrog/artifactory-orb@1.0.1
jobs:
  build_and_test:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Run tests
          command: npm run test-ci
      - run:
          name: Copy tests results for storing
          command: |
            mkdir test-results
            cp test-results.xml test-results/
          when: always
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  snyk_vulnerability_scan:
      docker:
        - image: cimg/node:16.16.0
      steps:
        - checkout
        - node/install-packages
        - snyk/scan:
            fail-on-issues: false
            monitor-on-build: false
  jfrog_build_scan_docker_image:
      machine:
        image: ubuntu-2004:current
      steps:
        - checkout
        - run:
            name: Install jf cli
            command: |
              sudo curl -fL https://install-cli.jfrog.io | sh
              jf config add \
              --user=${ARTIFACTORY_USER} \
              --access-token=${ARTIFACTORY_API_KEY} \
              --url=${ARTIFACTORY_URL} \
              --artifactory-url=${ARTIFACTORY_URL}/artifactory \
              --distribution-url=$ARTIFACTORY_URL/distribution \
              --mission-control-url=${ARTIFACTORY_URL}/ms \
              --pipelines-url=${ARTIFACTORY_URL}/pipelines \
              --xray-url=${ARTIFACTORY_URL}/xray \
              --interactive=false
        - run:
            name: Build Docker image
            command: |
              jf docker buildx build -t ${URL_DOCKER}/cicd-docker/cicd-workshop:<< pipeline.number >> .
        - run:
            name: X-Ray Scan Docker image
            command: |
              jf docker scan ${URL_DOCKER}/cicd-docker/cicd-workshop:<< pipeline.number >>
        - run:
            name: Push Docker image to Artifactory
            command: |
              echo $PWD_DOCKER |docker login --username=${ARTIFACTORY_USER} --password-stdin ${URL_DOCKER}
              jf docker push ${URL_DOCKER}/cicd-docker/cicd-workshop:<< pipeline.number >>              
        - run:
            name: Push Docker image to Docker Hub
            command: |
              echo $HUB_DOCKER_PWD |docker login --username=${HUB_DOCKER_USER} --password-stdin
              docker tag ${URL_DOCKER}/cicd-docker/cicd-workshop:<< pipeline.number >> \
                ${HUB_DOCKER_USER}/cicd-workshop:<< pipeline.number >> 
              docker push ${HUB_DOCKER_USER}/cicd-workshop:<< pipeline.number >>        
workflows:
  test_scan_deploy:
      jobs:
        - build_and_test
        - dependency_vulnerability_scan:
            context:
              - CICD_WORKSHOP_SNYK
        - jfrog_build_scan_docker_image:
            context:
              - CICD_WORKSHOP_JFROG